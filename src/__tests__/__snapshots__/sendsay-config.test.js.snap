// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render by sendsay config should return expected value 1`] = `
[
  {
    "content": "# rendered by https://www.npmjs.com/package/github-actions-checks
name: Checks
on:
  pull_request:
  push:
    branches:
      - stable
      - master
      - main
    tags:
      - v**

env:
  NODE_ENV: CI
  FORCE_COLOR: 1

concurrency:
  group: \${{ github.workflow }}-\${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  start:
    runs-on: ubuntu-latest
    env:
      PROGRESS_TITLE: "### 👷 Checks in progress..."
      PROGRESS_ICON: "🏄🏻‍♂️"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Starting comment
        uses: ./.github/actions/check-comment
        if: \${{ github.event.pull_request.number }}
        with:
          title: \${{ env.PROGRESS_TITLE }}
          eslint: \${{ env.PROGRESS_ICON }}
          prettier: \${{ env.PROGRESS_ICON }}
          stylelint: \${{ env.PROGRESS_ICON }}
          typescript: \${{ env.PROGRESS_ICON }}
          unit-app: \${{ env.PROGRESS_ICON }}
          unit-rest: \${{ env.PROGRESS_ICON }}
          token: \${{ secrets.GITHUB_TOKEN }}

  eslint:
    needs: start
    runs-on: ubuntu-latest

    outputs:
      eslint: \${{ steps.eslint.outputs.result }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Preparing
        uses: ./.github/actions/check-install

      - name: ESLint
        id: eslint
        if: always()
        uses: ./.github/actions/check-run
        with:
          script: yarn eslint

  checks:
    needs: start
    runs-on: ubuntu-latest

    outputs:
      prettier: \${{ steps.prettier.outputs.result }}
      stylelint: \${{ steps.stylelint.outputs.result }}
      typescript: \${{ steps.typescript.outputs.result }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Preparing
        uses: ./.github/actions/check-install

      - name: Prettier
        id: prettier
        if: always()
        uses: ./.github/actions/check-run
        with:
          script: yarn prettify

      - name: Stylelint
        id: stylelint
        if: always()
        uses: ./.github/actions/check-run
        with:
          script: yarn stylelint

      - name: TypeScript
        id: typescript
        if: always()
        uses: ./.github/actions/check-run
        with:
          script: yarn dev-tsc

  unit-app:
    needs: start
    runs-on: ubuntu-latest

    outputs:
      unit-app: \${{ steps.unit-app.outputs.result }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Preparing
        uses: ./.github/actions/check-install

      - name: Unit-app
        id: unit-app
        if: always()
        uses: ./.github/actions/check-run
        with:
          script: yarn unit-app

  unit-rest:
    needs: start
    runs-on: ubuntu-latest

    outputs:
      unit-rest: \${{ steps.unit-rest.outputs.result }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Preparing
        uses: ./.github/actions/check-install

      - name: Unit-rest
        id: unit-rest
        if: always()
        uses: ./.github/actions/check-run
        with:
          script: yarn unit-packages

  report:
    needs: [eslint, checks, unit-app, unit-rest]
    if: always()
    runs-on: ubuntu-latest
    env:
      SUCCESS_TITLE: "### ✅ Checks completed successfully!"
      FAILURE_TITLE: "### 🚫 Checks were executed with errors!"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Title
        id: title
        run: |
          if [[ \${{ needs.eslint.result }} == 'success' ]] && [[ \${{ needs.checks.result }} == 'success' ]] && [[ \${{ needs.unit-app.result }} == 'success' ]] && [[ \${{ needs.unit-rest.result }} == 'success' ]]; then echo "str=\${{ env.SUCCESS_TITLE }}" >> $GITHUB_OUTPUT; else echo "str=\${{ env.FAILURE_TITLE }}" >> $GITHUB_OUTPUT; fi

      - name: Final comment
        uses: ./.github/actions/check-comment
        if: \${{ github.event.pull_request.number }}
        with:
          title: \${{ steps.title.outputs.str }}
          eslint: \${{ needs.eslint.outputs.eslint }}
          prettier: \${{ needs.checks.outputs.prettier }}
          stylelint: \${{ needs.checks.outputs.stylelint }}
          typescript: \${{ needs.checks.outputs.typescript }}
          unit-app: \${{ needs.unit-app.outputs.unit-app }}
          unit-rest: \${{ needs.unit-rest.outputs.unit-rest }}
          token: \${{ secrets.GITHUB_TOKEN }}
",
    "output": ".github/workflows/checks.yml",
  },
  {
    "content": "# rendered by https://www.npmjs.com/package/github-actions-checks
name: Check comment
description: show comment with results

inputs:
  token:
    required: true
    description: GITHUB_TOKEN
  title:
    required: true
    description: title
  eslint:
    required: true
    description: ESLint status
  prettier:
    required: true
    description: Prettier status
  stylelint:
    required: true
    description: Stylelint status
  typescript:
    required: true
    description: TypeScript status
  unit-app:
    required: true
    description: Unit-app status
  unit-rest:
    required: true
    description: Unit-rest status

runs:
  using: composite
  steps:
    - name: Comment
      uses: sendsay-ru/rewritable-pr-comment@v1.0.1
      with:
        message: "\${{ inputs.title }} \\n\\n
          | ESLint | Prettier | Stylelint | TypeScript | Unit-app | Unit-rest |\\n
          | --- | --- | --- | --- | --- | --- |\\n
          |  \${{ inputs.eslint }}  |  \${{ inputs.prettier }}  |  \${{ inputs.stylelint }}  |  \${{ inputs.typescript }}  |  \${{ inputs.unit-app }}  |  \${{ inputs.unit-rest }}  |\\n\\n
          [🔗 See details](\${{ github.server_url }}/\${{ github.repository }}/actions/runs/\${{ github.run_id }})"
        GITHUB_TOKEN: \${{ inputs.token }}
        COMMENT_IDENTIFIER: "comment-check-result"
",
    "output": ".github/actions/check-comment/action.yml",
  },
  {
    "content": "# rendered by https://www.npmjs.com/package/github-actions-checks
name: Preparing
description: preparing to run the checks

runs:
  using: composite
  steps:
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install packages
      shell: bash
      run: yarn install --immutable

    - uses: dtinth/setup-github-actions-caching-for-turbo@v1

    - name: Build packages
      if: always()
      shell: bash
      run: yarn build-packages
",
    "output": ".github/actions/check-install/action.yml",
  },
  {
    "content": "# rendered by https://www.npmjs.com/package/github-actions-checks
name: Run check
description: run check script

inputs:
  script:
    required: true
    description: script command

outputs:
  result:
    description: "Script result"
    value: \${{ steps.result.outputs.status }}

runs:
  using: composite
  steps:
    - name: Run script
      id: script
      shell: bash
      run: \${{ inputs.script }}

    - name: Results
      id: result
      if: always()
      env:
        SUCCESS_ICON: "☘️"
        FAILURE_ICON: "🐙"
      shell: bash
      run: |
        if [[ \${{ steps.script.outcome }} == 'success' ]]; then echo "status=$SUCCESS_ICON" >> $GITHUB_OUTPUT; else echo "status=$FAILURE_ICON" >> $GITHUB_OUTPUT; fi
",
    "output": ".github/actions/check-run/action.yml",
  },
]
`;
